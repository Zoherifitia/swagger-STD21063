openapi: 3.0.1
info:
  title: STD21063 API
  description: 'Global description of my API'
  version: 1.0.0
servers:
 - url: https://STD21063.com
tags: 
 - name: Students
   
 - name: Courses
paths:
 /students:
    get:
      tags:
        - Students
      operationId: getStudents
      summary: Get all students
      description: Get all students with details
      responses:
        200: 
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad request
    post: 
      tags:
        - Students
      operationId: createStudent
      summary : Create new student
      description: Create new student
      requestBody:
        description: Student to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudent'
        required: true
      responses:
        200:
          description: List of students
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        400:
          description: Bad request
          content: {}
           
 /courses:
    get:
      tags:
        - Courses
      operationId: getListCourses
      summary: Get all list of courses
      description: Get all courses with details
      responses:
        200: 
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Courses'
        400:
          description: Bad request
          content: {}
            
    post: 
      tags:
        - Courses
      operationId: createaCourses
      parameters:
        - name: IdCourses
          in: query
          required: true
          schema:
            type: integer
            format: int64
      summary : Create new courses
      description: Create new courses
      requestBody:
        description: Courses to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourses'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCourses'
        400:
          description: Operation invalid
          content : {}
 /courses/{id}:
    get:
      tags:
        - Courses
      operationId: getSpecificCourses
      summary: Get specific courses
      description: Get a courses with details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200: 
          description: Courses
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Courses'
        400:
          description: courses not found
          content: {}
            
components:
  schemas:
    CreateStudent:
      type: object
      properties:
        name:
          type: string
          example: "Rakoto"
        birth_date:
          type: string
          format: date
          example: "2022-01-01"
    Student:
      allOf:
        - $ref: '#/components/schemas/CreateStudent'
      type: object
      properties:
        id:
          type: integer
          example: 10
    Courses:
      type: object
      properties:
        page:
         type: integer
         example: 2
        page_size: 
          type: integer
          example: 12
    CreateCourses:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        teacher:
          type: string
        createDateTime:
          type: string
          format: date
       